{"ast":null,"code":"var _jsxFileName = \"/Users/kensuke/GoogleDrive/GoogleDrive_Sync/01_Doing/\\u958B\\u767A\\u52C9\\u5F37\\u4F1A/distribution-site/hello-typescript/src/components/resultPage/resultImageList.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport firebase from '../../firebase';\nconst useStyles = makeStyles(() => createStyles({}));\n\nconst ImageItemList = () => {\n  const [data, setData] = useState([]);\n  const {\n    keyword\n  } = useParams();\n  const classes = useStyles();\n\n  const getData = async searchWord => {\n    const db = firebase.firestore();\n    const tileDataRef = db.collection(\"tileData\");\n    const searchedData = tileDataRef.where(\"keyword\", \"array-contains\", searchWord);\n    const snapShot = await searchedData.get();\n    const temporaryData = [];\n    snapShot.docs.map(doc => {\n      temporaryData.push(doc.data());\n    });\n    setData(temporaryData);\n  };\n\n  useEffect(() => {\n    getData(keyword);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, data.map(tile => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tile.image,\n    alt: tile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }\n  }))));\n};\n\nexport default ImageItemList;","map":{"version":3,"sources":["/Users/kensuke/GoogleDrive/GoogleDrive_Sync/01_Doing/開発勉強会/distribution-site/hello-typescript/src/components/resultPage/resultImageList.tsx"],"names":["React","useState","useEffect","useParams","createStyles","makeStyles","firebase","useStyles","ImageItemList","data","setData","keyword","classes","getData","searchWord","db","firestore","tileDataRef","collection","searchedData","where","snapShot","get","temporaryData","docs","map","doc","push","tile","image","title"],"mappings":";AAAA,OAAOA,KAAP,IAAmBC,QAAnB,EAA6BC,SAA7B,QAA6C,OAA7C;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,0BAAvC;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAGA,MAAMC,SAAS,GAAGF,UAAU,CAAC,MAC3BD,YAAY,CAAC,EAAD,CADc,CAA5B;;AAMA,MAAMI,aAAiB,GAAG,MAAM;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAa,EAAb,CAAhC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AACA,QAAMS,OAAO,GAAGL,SAAS,EAAzB;;AAEA,QAAMM,OAAO,GAAG,MAAOC,UAAP,IAA2C;AAC1D,UAAMC,EAAE,GAAGT,QAAQ,CAACU,SAAT,EAAX;AACA,UAAMC,WAAW,GAAGF,EAAE,CAACG,UAAH,CAAc,UAAd,CAApB;AACA,UAAMC,YAAY,GAAGF,WAAW,CAACG,KAAZ,CAAkB,SAAlB,EAA6B,gBAA7B,EAA+CN,UAA/C,CAArB;AACA,UAAMO,QAAQ,GAAG,MAAMF,YAAY,CAACG,GAAb,EAAvB;AACC,UAAMC,aAAuB,GAAG,EAAhC;AAEDF,IAAAA,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AACvBH,MAAAA,aAAa,CAACI,IAAd,CAAmBD,GAAG,CAACjB,IAAJ,EAAnB;AACD,KAFD;AAIAC,IAAAA,OAAO,CAACa,aAAD,CAAP;AAEA,GAbD;;AAeArB,EAAAA,SAAS,CAAC,MAAM;AACbW,IAAAA,OAAO,CAACF,OAAD,CAAP;AACD,GAFO,CAAT;AAIC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,IAAI,CAACgB,GAAL,CAAUG,IAAD,iBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,KAAf;AAAsB,IAAA,GAAG,EAAED,IAAI,CAACE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADE,CADD,CADJ;AAUD,CAlCD;;AAoCA,eAAetB,aAAf","sourcesContent":["import React, {FC, useState, useEffect} from \"react\";\nimport {useParams} from 'react-router-dom'; \nimport {createStyles, makeStyles} from '@material-ui/core/styles'; \n\nimport firebase from '../../firebase';\nimport {TileDate} from \"../../types/types\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    \n  }),\n);\n\nconst ImageItemList: FC = () => {\n\tconst [data, setData] = useState<TileDate[]>([]);\n\tconst { keyword } = useParams(); \n\tconst classes = useStyles(); \n\n\tconst getData = async (searchWord: string | undefined) =>  {\n\t\tconst db = firebase.firestore();\n\t\tconst tileDataRef = db.collection(\"tileData\");\n\t\tconst searchedData = tileDataRef.where(\"keyword\", \"array-contains\", searchWord);        \n\t\tconst snapShot = await searchedData.get();\n\t \tconst temporaryData: object[] = [];\n\n\t\tsnapShot.docs.map(doc => {\n\t\t  temporaryData.push(doc.data());\n\t\t})\n\n\t\tsetData(temporaryData as TileDate[]);\n\n\t}\n\n\tuseEffect(() => {\n    getData(keyword);\n \t});\n    \n  return(\n      <div>\n      {data.map((tile) => (\n\t\t\t  <div>\n\t\t\t    <img src={tile.image} alt={tile.title} />        \n\t\t\t  </div> \n\n\t\t\t ))}\n      </div>\n  )\n}\n\nexport default ImageItemList;"]},"metadata":{},"sourceType":"module"}