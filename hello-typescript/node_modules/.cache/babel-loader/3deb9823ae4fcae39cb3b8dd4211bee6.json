{"ast":null,"code":"var _jsxFileName = \"/Users/kensuke/GoogleDrive/GoogleDrive_Sync/01_Doing/\\u958B\\u767A\\u52C9\\u5F37\\u4F1A/distribution-site/hello-typescript/src/pages/downloadPage.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport firebase from '../firebase';\nconst useStyles = makeStyles(() => createStyles({}));\n\nconst DownloadPage = () => {\n  const {\n    keyword\n  } = useParams();\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n\n  const getData = async searchWord => {\n    const db = firebase.firestore();\n    const tileDataRef = db.collection(\"tileData\");\n    const searchedData = tileDataRef.where(\"keyword\", \"array-contains\", searchWord);\n    const temporaryData = [];\n    const snapShot = await searchedData.get();\n    snapShot.docs.map(doc => {\n      temporaryData.push(doc.data());\n    });\n    setData(temporaryData);\n  };\n\n  useEffect(() => {\n    getData(keyword);\n  }, []);\n\n  const displayImage = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }, data.map(tile => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: tile.image,\n      alt: tile.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, displayImage());\n};\n\nexport default DownloadPage;","map":{"version":3,"sources":["/Users/kensuke/GoogleDrive/GoogleDrive_Sync/01_Doing/開発勉強会/distribution-site/hello-typescript/src/pages/downloadPage.tsx"],"names":["React","useEffect","useState","useParams","createStyles","makeStyles","firebase","useStyles","DownloadPage","keyword","classes","data","setData","getData","searchWord","db","firestore","tileDataRef","collection","searchedData","where","temporaryData","snapShot","get","docs","map","doc","push","displayImage","tile","image","title"],"mappings":";AAAA,OAAOA,KAAP,IAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,0BAAvC;AAGA,OAAOC,QAAP,MAAqB,aAArB;AAIA,MAAMC,SAAS,GAAGF,UAAU,CAAC,MAC3BD,YAAY,CAAC,EAAD,CADc,CAA5B;;AAMA,MAAMI,YAAgB,GAAG,MAAM;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAcN,SAAS,EAA7B;AACA,QAAMO,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAa,EAAb,CAAhC;;AAEA,QAAMW,OAAO,GAAG,MAAOC,UAAP,IAA0C;AACvD,UAAMC,EAAE,GAAGT,QAAQ,CAACU,SAAT,EAAX;AACA,UAAMC,WAAW,GAAGF,EAAE,CAACG,UAAH,CAAc,UAAd,CAApB;AACA,UAAMC,YAAY,GAAGF,WAAW,CAACG,KAAZ,CAAkB,SAAlB,EAA6B,gBAA7B,EAA+CN,UAA/C,CAArB;AACA,UAAMO,aAAuB,GAAG,EAAhC;AAEA,UAAMC,QAAQ,GAAG,MAAMH,YAAY,CAACI,GAAb,EAAvB;AAEAD,IAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AACvBL,MAAAA,aAAa,CAACM,IAAd,CAAmBD,GAAG,CAACf,IAAJ,EAAnB;AACD,KAFD;AAIAC,IAAAA,OAAO,CAACS,aAAD,CAAP;AACD,GAbF;;AAeCpB,EAAAA,SAAS,CAAC,MAAM;AAChBY,IAAAA,OAAO,CAACJ,OAAD,CAAP;AACA,GAFS,EAEP,EAFO,CAAT;;AAID,QAAMmB,YAAY,GAAG,MAAM;AACzB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjB,IAAI,CAACc,GAAL,CAAUI,IAAD,iBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAf;AAAsB,MAAA,GAAG,EAAED,IAAI,CAACE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF;AASA,GAVF;;AAYC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,YAAY,EADd,CADF;AAKD,CAzCD;;AA2CA,eAAepB,YAAf","sourcesContent":["import React, {FC, useEffect, useState} from \"react\";\nimport {useParams} from 'react-router-dom';\nimport {createStyles, makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport firebase from '../firebase';\nimport TopHeader from \"../components/topPage/topHeader\";\nimport {TileDate} from \"../types/types\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    \n  })\n);\n\nconst DownloadPage: FC = () => {\n\tconst { keyword } = useParams();\n\tconst classes = useStyles(); \n\tconst [data, setData] = useState<TileDate[]>([]);\n\n\tconst getData = async (searchWord: string | undefined) => {\n    const db = firebase.firestore();\n    const tileDataRef = db.collection(\"tileData\");\n    const searchedData = tileDataRef.where(\"keyword\", \"array-contains\", searchWord);\n    const temporaryData: object[] = [];\n  \n    const snapShot = await searchedData.get();\n  \n    snapShot.docs.map(doc => {\n      temporaryData.push(doc.data());\n    })\n  \n    setData(temporaryData as TileDate[]);\n  }\n\n  useEffect(() => { \n\t\tgetData(keyword);\n\t}, []);\n\n\tconst displayImage = () => {\n\t  return(\n\t    <div>\n\t      {data.map((tile) => (\n\t        <div>\n\t          <img src={tile.image} alt={tile.title} />\n\t        </div>\n\t      ))}\n\t    </div>\n  \t)\n \t}\n    \n  return(\n    <div>\n     {displayImage()}\n    </div>\n  )\n}\n\nexport default DownloadPage;"]},"metadata":{},"sourceType":"module"}